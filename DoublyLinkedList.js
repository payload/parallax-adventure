// Generated by CoffeeScript 1.3.1
(function() {
  var DoublyLinkedList,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  DoublyLinkedList = (function() {

    DoublyLinkedList.name = 'DoublyLinkedList';

    function DoublyLinkedList(_arg) {
      this.name = (_arg != null ? _arg : {}).name;
      this.call = __bind(this.call, this);

      this.values = __bind(this.values, this);

      this.add = __bind(this.add, this);

      this.head = null;
      this.length = 0;
    }

    DoublyLinkedList.prototype.add = function(value) {
      var node, o;
      ++this.length;
      node = {
        list: this
      };
      value.$[this.name || get_id(this)] = node;
      if (this.head === null) {
        return this.head = OBJ_X(node, {
          value: value
        });
      } else {
        o = this.head;
        while (o.next) {
          o = o.next;
        }
        return o.next = OBJ_X(node, {
          prev: o,
          value: value
        });
      }
    };

    DoublyLinkedList.prototype.values = function() {
      var array;
      array = [];
      this.call(function(value, node) {
        return array.push(value);
      });
      return array;
    };

    DoublyLinkedList.prototype.call = function(fun) {
      var o;
      o = this.head;
      while (o) {
        fun(o.value, o);
        o = o.next;
      }
      return;
    };

    return DoublyLinkedList;

  })();

  OBJ_X(window, {
    DoublyLinkedList: DoublyLinkedList
  });

}).call(this);
